{"version":3,"sources":["funcionesPassword.js"],"names":["_crypto","_interopRequireDefault","require","_jsonwebtoken","encriptarPassword","password","salt","crypto","randomBytes","toString","hash","scryptSync","validarPassword","adminAutorizado"],"mappings":"4OAAA,IAAAA,QAAAC,uBAAAC,QAAA,WACAC,cAAAF,uBAAAC,QAAA,yFAEO,SAASE,kBAAkBC,GAC9B,IAAMC,EAAOC,QAAAA,QAAOC,YAAY,IAAIC,SAAS,OAE7C,MAAO,CACHH,KAAAA,EACAI,KAHSH,QAAAA,QAAOI,WAAWN,EAAUC,EAAM,GAAI,GAAI,UAAUG,SAAS,QAJ9E,SAAAG,gBAAAP,EAAAC,EAAAI,GAaI,OADoBH,QAAAA,QAAOI,WAAWN,EAAUC,EAAM,GAAI,GAAI,UAAUG,SAAS,QAC3DC,EAVhBJ,SAAOC,qBAEb,SAAOM","file":"funcionesPassword.min.js","sourcesContent":["import crypto from \"crypto\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nexport function encriptarPassword(password){\r\n    const salt = crypto.randomBytes(32).toString(\"hex\");\r\n    const hash = crypto.scryptSync(password, salt, 10, 64, \"sha512\").toString(\"hex\")\r\n    return {\r\n        salt,\r\n        hash\r\n    }\r\n}\r\n\r\nexport function validarPassword(password, salt, hash){\r\n    const hashEvaluar = crypto.scryptSync(password, salt, 10, 64, \"sha512\").toString(\"hex\")\r\n    return hashEvaluar == hash;\r\n}\r\n\r\nexport function usuarioAutorizado(){\r\n\r\n}\r\n\r\nexport function adminAutorizado(){\r\n    \r\n}"]}