{"version":3,"sources":["usuariosBD.js"],"names":["_usuarioModelo","_interopRequireDefault","require","_manejoErrores","_jwt","_funcionesPassword","register","_ref","username","email","password","usuarioExistente","emailExitente","_encriptarPassword","salt","hash","data","respuesta","token","regeneratorRuntime","async","_context","prev","next","awrap","User","findOne","sent","abrupt","mensajes","encriptarPassword","save","crearToken","id","_id","t0","stop","login","_ref2","usuarioCorrecto","_context2","validarPassword"],"mappings":"mHAAA,IAAAA,eAAAC,uBAAAC,QAAA,+BACAC,eAAAD,QAAA,4BACAE,KAAAF,QAAA,kBACAG,mBAAAH,QAAA,+GAEO,SAAeI,SAAfC,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAyBf,EAAzBD,EAAyBC,SAAUC,EAAnCF,EAAmCE,MAAOC,EAA1CH,EAA0CG,SAA1CW,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAEgCC,eAAAA,QAAKC,QAAQ,CAAClB,SAAAA,KAF9C,KAAA,EAAA,OAEOG,EAFPU,EAAAM,KAAAN,EAAAE,KAAA,EAAAJ,mBAAAK,MALPC,eAAAA,QAAAC,QAAA,CAAAjB,MAAAA,KAKO,KAAA,EAAA,GALPG,EAKOS,EAAAM,KAJPhB,GAAAC,EAIO,OAAAS,EAAAO,OAAA,UAMY,EAAAzB,eAAA0B,UAAS,IAAK,sBAN1BR,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAA,OAAAV,GAFP,EAAAR,mBAAAyB,mBAAApB,GAAAI,EAEOD,EAFPC,KAAAC,EAEOF,EAFPE,KAYcC,EAAO,IAAIS,eAAAA,QAAK,CAACjB,SAAAA,EAAUC,MAAAA,EAAOC,SAASK,EAAMD,KAAAA,IAVxDO,EAAAE,KAAA,GAAAJ,mBAAAK,MAWuBR,EAAKe,QAX5B,KAAA,GAAA,OAWKd,EAXLI,EAAAM,KAAAN,EAAAE,KAAA,GAAAJ,mBAAAK,OAYmB,EAAApB,KAAA4B,YAAW,CAACC,GAAGhB,EAAUiB,OAZ5C,KAAA,GAAA,OAYOhB,EAZPG,EAAAM,KAAAN,EAAAO,OAAA,UAAetB,EAAAA,eAAAA,UAAf,IAAA,kCAAA,GAAAY,IAAA,KAAA,GAAA,OAAAG,EAAAC,KAAA,GAAAD,EAAAc,GAAAd,EAAA,MAAA,GAAAA,EAAAO,OAAA,UAeQ,EAAAzB,eAAA0B,UAAS,IAAI,kCAfrB,KAAA,GAAA,IAAA,MAAA,OAAAR,EAAAe,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAAA,IAAAC,MAAA,SAAAC,GAAA,IAAA9B,EAAAE,EAAA6B,EAAA,OAAApB,mBAAAC,MAAA,SAAAoB,GAAA,OAAA,OAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,KAAA,EAAA,OAAAf,EAAA8B,EAAA9B,SAAAE,EAAA4B,EAAA5B,SAAA8B,EAAAlB,KAAA,EAAAkB,EAAAjB,KAAA,EAAAJ,mBAAAK,MAAAC,eAAAA,QAAAC,QAAA,CAAAlB,SAAAA,KAAA,KAAA,EAAA,GAAA+B,EAAAC,EAAAb,KAAA,CAAAa,EAAAjB,KAAA,EAAA,MAAA,OAAAiB,EAAAZ,OAAA,UAAA,EAAAzB,eAAA0B,UAAA,IAAA,sBAAA,KAAA,EAAA,IAAA,EAAAxB,mBAAAoC,iBAAA/B,EAAA6B,EAAAzB,KAAAyB,EAAA7B,UAAA,CAAA8B,EAAAjB,KAAA,GAAA,MAAA,OAAAiB,EAAAZ,OAAA,UAAA,EAAAzB,eAAA0B,UAAA,IAAA,sBAAA,KAAA,GAAA,OAAAW,EAAAZ,OAAA,UAAA,EAAAzB,eAAA0B,UAAA,IAAA,qBAAA,KAAA,GAAA,OAAAW,EAAAlB,KAAA,GAAAkB,EAAAL,GAAAK,EAAA,MAAA,GAAAA,EAAAZ,OAAA,UAAA,EAAAzB,eAAA0B,UAAA,IAAA,sBAAA,KAAA,GAAA,IAAA,MAAA,OAAAW,EAAAJ,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"usuariosBD.min.js","sourcesContent":["import User from \"../models/usuarioModelo.js\";\r\nimport { mensajes } from \"../libs/manejoErrores.js\";\r\nimport { crearToken } from \"../libs/jwt.js\";\r\nimport {encriptarPassword, validarPassword} from \"../middlewares/funcionesPassword.js\"\r\n\r\nexport async function register({username, email, password}){\r\n    try {\r\n        const usuarioExistente = await User.findOne({username});\r\n        const emailExitente = await User.findOne({email});\r\n\r\n        if (usuarioExistente || emailExitente){\r\n            return mensajes(400, \"Usuario duplicado\");\r\n        }\r\n\r\n        const {salt, hash} = encriptarPassword(password);\r\n        const data = new User({username, email, password:hash, salt})\r\n        var respuesta = await data.save();\r\n        const token=await crearToken({id:respuesta._id});\r\n        return mensajes(200,\"Registro agregado correctamente\", \"\", token);\r\n    } catch (error) {\r\n        return mensajes(400,\"Error al registrar al usuario\");\r\n    }\r\n}\r\n\r\nexport const login = async({username, password})=>{\r\n   try {\r\n        var usuarioCorrecto = await User.findOne({username});\r\n        if (!usuarioCorrecto){\r\n            return mensajes(400, \"datos incorrectos\")\r\n        }\r\n        const passwordCorrecto = validarPassword(password, usuarioCorrecto.salt, usuarioCorrecto.password);\r\n        if (!passwordCorrecto){\r\n            return mensajes(400, \"datos incorrectos\")\r\n        }\r\n        return mensajes(200, \"ingreso correcto\");\r\n   } catch (error) {\r\n        //console.log(\"catch incorrecto\");\r\n        return mensajes(400, \"datos incorrectos\");\r\n   }\r\n}"]}