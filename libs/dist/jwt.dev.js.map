{"version":3,"sources":["jwt.js"],"names":["crearToken","dato","Promise","resolve","reject","jwt","sign","process","env","SECRET_TOKEN","expiresIn","err","token"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AACO,SAASA,UAAT,CAAoBC,IAApB,EAAyB;AAC5B,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,6BAAIC,IAAJ,CACIL,IADJ,EAEIM,OAAO,CAACC,GAAR,CAAYC,YAFhB,EAGI;AACIC,MAAAA,SAAS,EAAC;AADd,KAHJ,EAMI,UAACC,GAAD,EAAKC,KAAL,EAAa;AACT,UAAGD,GAAH,EAAO;AACHP,QAAAA,MAAM,CAAC,6BAAS,GAAT,EAAa,2BAAb,CAAD,CAAN;AACH;;AACDD,MAAAA,OAAO,CAACS,KAAD,CAAP;AACH,KAXL;AAaH,GAdM,CAAP;AAeH","sourcesContent":["import jwt from \"jsonwebtoken\";\r\nimport 'dotenv/config';\r\nimport { mensajes } from \"./manejoErrores.js\";\r\nexport function crearToken(dato){\r\n    return new Promise((resolve, reject) => {\r\n        jwt.sign(\r\n            dato,\r\n            process.env.SECRET_TOKEN,\r\n            {\r\n                expiresIn:\"1d\"\r\n            },\r\n            (err,token)=>{\r\n                if(err){\r\n                    reject(mensajes(400,\"Error al generar el token\"));\r\n                }\r\n                resolve(token);\r\n            }\r\n        );\r\n    })\r\n}"],"file":"jwt.dev.js"}