{"version":3,"sources":["jwt.js"],"names":["_jsonwebtoken","_interopRequireDefault","require","_manejoErrores","crearToken","dato","Promise","resolve","reject","jwt","sign","process","env","SECRET_TOKEN","expiresIn","err","token","mensajes"],"mappings":"kGAAA,IAAAA,cAAAC,uBAAAC,QAAA,iBACAA,QAAA,iBACA,IAAAC,eAAAD,QAAA,8FACO,SAASE,WAAWC,GACvB,OAAO,IAAIC,QAAQ,SAACC,EAASC,GACzBC,cAAAA,QAAIC,KACAL,EANZM,QAAAC,IAAAC,aAQY,CAPZC,UAAA,MACA,SAAAC,EAAAC,GAUmBD,GACCP,GAAO,EAAAL,eAAAc,UAAS,IAAI,8BAVxBb,EAATY","file":"jwt.min.js","sourcesContent":["import jwt from \"jsonwebtoken\";\r\nimport 'dotenv/config';\r\nimport { mensajes } from \"./manejoErrores.js\";\r\nexport function crearToken(dato){\r\n    return new Promise((resolve, reject) => {\r\n        jwt.sign(\r\n            dato,\r\n            process.env.SECRET_TOKEN,\r\n            {\r\n                expiresIn:\"1d\"\r\n            },\r\n            (err,token)=>{\r\n                if(err){\r\n                    reject(mensajes(400,\"Error al generar el token\"));\r\n                }\r\n                resolve(token);\r\n            }\r\n        );\r\n    })\r\n}"]}